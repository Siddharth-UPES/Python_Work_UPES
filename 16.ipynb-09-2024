{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "facc7bfb-4475-43bc-ac79-232b3cc7d6ef",
   "metadata": {},
   "source": [
    "#### Write a function that takes dir address from the user and organise  file on that folder in ther following category"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "c898371d-1f7f-4d9b-94d7-35aa9bc17a36",
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "394102b2-7b03-461c-b871-e9973622c2a3",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "incomplete input (3131555872.py, line 6)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  Cell \u001b[1;32mIn[3], line 6\u001b[1;36m\u001b[0m\n\u001b[1;33m    llist_of\u001b[0m\n\u001b[1;37m            ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m incomplete input\n"
     ]
    }
   ],
   "source": [
    "address= input(\"Enter location\")\n",
    "os.chdir(address)\n",
    "directory_name = input(\"Enter directory name\")\n",
    "os.mkdir(directoryname)\n",
    "list_of =os.listdir()\n",
    "llist_of"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0f0d27e7-4970-45bb-be6a-d5d39a61c8ce",
   "metadata": {},
   "outputs": [],
   "source": [
    "dirName=\"Images\"\n",
    "make_dir_cmd=f\"md(dirName)\"\n",
    "os.system(make_dir_cmd)\n",
    "os.mkdir(\"dirName\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "39ead6af-0bae-449d-adb5-c55a037ef841",
   "metadata": {},
   "outputs": [],
   "source": [
    "# to move file\n",
    "\n",
    "relative_source_file_path=\".\\demo.txt\"\n",
    "dirName=\"Images\"\n",
    "relative_destination_file_path = f\".\\{dirnmae}\\demo.txt\"\n",
    "cmd_to_move_file=f\"move {relative_source_file_path} {relative_destination_file_path}\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "fe1c0df1-ec38-497f-a669-d3eab7a21cad",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter location D:\\Git Demo\\Python_UPES\\Class_Practise\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "address= input(\"Enter location\")\n",
    "os.chdir(address)\n",
    "os.mkdir(\"Audios\")\n",
    "os.mkdir(\"Docs\")\n",
    "os.mkdir(\"MICS\")\n",
    "os.mkdir(\"Images\")\n",
    "os.mkdir(\"Videos\")\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "3489885b-190f-415d-8914-0296ac8dc311",
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "address=r\"D:\\Git Demo\\Python_UPES\\Class_Practise\\Organizer\\Organizer\"\n",
    "os.chdir(address)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "179781b0-afa8-4dee-9928-efbdd4bbd35a",
   "metadata": {},
   "outputs": [
    {
     "ename": "FileExistsError",
     "evalue": "[WinError 183] Cannot create a file when that file already exists: 'Videos,Audios,Images,Docs,Misc'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mFileExistsError\u001b[0m                           Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[18], line 7\u001b[0m\n\u001b[0;32m      4\u001b[0m dirs_to_crete\n\u001b[0;32m      6\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m dir1 \u001b[38;5;129;01min\u001b[39;00m dirs_to_crete:\n\u001b[1;32m----> 7\u001b[0m     \u001b[43mos\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mmkdir\u001b[49m\u001b[43m(\u001b[49m\u001b[43mdir1\u001b[49m\u001b[43m)\u001b[49m\n",
      "\u001b[1;31mFileExistsError\u001b[0m: [WinError 183] Cannot create a file when that file already exists: 'Videos,Audios,Images,Docs,Misc'"
     ]
    }
   ],
   "source": [
    "list_of_file=os.listdir()\n",
    "list_of_file\n",
    "dirs_to_crete =\"Videos,Audios,Images,Docs,Misc\".split(\".\")\n",
    "dirs_to_crete\n",
    "\n",
    "for dir1 in dirs_to_crete:\n",
    "    os.mkdir(dir1)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "09ce2393-a26c-4d07-bf01-e833236d1749",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['a1.mp3',\n",
       " 'a2.oog',\n",
       " 'd1.docx',\n",
       " 'd2.png',\n",
       " 'd3.pdf',\n",
       " 'd4.txt',\n",
       " 'image.png',\n",
       " 'image1.jpg',\n",
       " 'image2.jpg',\n",
       " 'image2.png',\n",
       " 'misc1',\n",
       " 'misc2',\n",
       " 'misc3',\n",
       " 'v1.mp4',\n",
       " 'v2.mkv',\n",
       " 'Videos,Audios,Images,Docs,Misc']"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list_of_file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "55bc758c-bd2a-4b85-b13b-2f087b6a8ded",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "mp3\n",
      "oog\n",
      "docx\n",
      "png\n",
      "pdf\n",
      "txt\n",
      "png\n",
      "jpg\n",
      "jpg\n",
      "png\n",
      "misc1\n",
      "misc2\n",
      "misc3\n",
      "mp4\n",
      "mkv\n"
     ]
    }
   ],
   "source": [
    "for f in list_of_file:\n",
    "    print(f.split(\".\")[-1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "b46ecb41-c011-4df7-bbcb-380daa72b118",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "move ./d2.png ./Images/d2.png\n",
      "move ./image.png ./Images/image.png\n",
      "move ./image1.jpg ./Images/image1.jpg\n",
      "move ./image2.jpg ./Images/image2.jpg\n",
      "move ./image2.png ./Images/image2.png\n"
     ]
    }
   ],
   "source": [
    "for f in list_of_file:\n",
    "    ext =(f.split(\".\")[-1])\n",
    "    if ext == \"jpg\" or ext == \"png\":\n",
    "        cmd=f\"move ./{f} ./Images/{f}\"\n",
    "        print(cmd)\n",
    "        os.system(cmd)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "191fc0ef-32e1-49e7-a791-b92d301355d9",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
